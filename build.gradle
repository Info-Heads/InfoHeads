/*
 * This file was generated by the Gradle 'init' task.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

ext {
    baselib = "com.haroldstudios.infoheads"
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.codemc.org/repository/maven-public')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://repo.mattstudios.me/artifactory/public/')
    }
}

dependencies {
    implementation('com.github.Harry0198:HexiTextLib:1.0')
    implementation('org.bstats:bstats-bukkit:2.2.1')
    implementation('me.mattstudios.utils:matt-framework:1.4.6')
    implementation('dev.triumphteam:triumph-gui:3.0.3')
    implementation('com.github.cryptomorin:XSeries:8.2.0')
    implementation('net.kyori:adventure-api:4.8.1')
    implementation('net.kyori:adventure-text-serializer-legacy:4.8.1')
    compileOnly('org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT')
    compileOnly('me.clip:placeholderapi:2.10.9')
    compileOnly('com.github.shynixn.headdatabase:hdb-api:1.0')
    compileOnly('org.projectlombok:lombok:1.18.20')
    compileOnly('com.github.badbones69:Block-Particles:1.11.1')
    annotationProcessor('org.projectlombok:lombok:1.18.20')
}

jar {
    archiveFileName = "${project.name}.jar"
}

shadowJar {
    archiveFileName = "${project.name}.jar"
    relocate('com.cryptomorin.xseries',"${baselib}.xseries")
    relocate('org.bstats',"${baselib}")
    relocate('dev.triumphteam.gui',"${baselib}.mfgui")
    relocate('me.mattstudios.mf',"${baselib}.mf")
}

group = 'com.haroldstudios'
version = '2.3.17'
description = 'InfoHeads'
java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy DuplicatesStrategy.INCLUDE
        filter ReplaceTokens, tokens: [version: version]
    }
}

tasks.build.dependsOn tasks.shadowJar